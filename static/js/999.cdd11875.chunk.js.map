{"version":3,"file":"static/js/999.cdd11875.chunk.js","mappings":"qJACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA2K,wBAA3K,EAA8M,0BAA9M,EAAqP,4BCArP,EAA6B,4BAA7B,EAAkE,wBAAlE,EAAoG,yBAApG,EAAsI,wB,aCEtI,MAaA,EAbiBA,IACb,IAAIC,EAAYC,EAAe,KAAQF,EAAMG,OAAUD,EAAW,IAElE,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAWJ,EAAUK,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWH,KAChBK,EAAAA,EAAAA,KAAA,OAAKF,UAAWH,EAAUI,SACrBN,EAAMQ,YAET,E,cCRd,MAaA,EAboBR,IAEZO,EAAAA,EAAAA,KAAA,OAAKF,UAAWH,EAASI,UACrBF,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACC,GAAI,YAAcV,EAAMW,GAAGL,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWH,EAASI,UACrBC,EAAAA,EAAAA,KAAA,OAAKK,IAAKZ,EAAMa,WAEnBb,EAAMc,U,2CCDvB,MA6BMC,GAAcC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAdJlB,IAEhBI,EAAAA,EAAAA,MAAA,QAAMC,UAAWH,EAAckB,SAAUpB,EAAMqB,aAAaf,SAAA,EACxDC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACXV,KAAM,iBACNW,YAAa,kBACbC,SAAU,CAACC,EAAAA,EAAUZ,MAG5BR,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAOpB,EA/CiBN,IACb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAC7B1B,EAAAA,EAAAA,KAAC2B,EAAU,CAACvB,GAAIsB,EAAEtB,GAAIG,KAAMmB,EAAEnB,KAAMD,OAAQoB,EAAEpB,WAGrDsB,EAAmBP,EAAMQ,SAASJ,KAAIK,IAC/B9B,EAAAA,EAAAA,KAAC+B,EAAO,CAAC9B,QAAS6B,EAAE7B,QAAUL,OAAQkC,EAAElC,WAOnD,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWH,EAAUI,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWH,EAAeI,SAC1BwB,KAEL1B,EAAAA,EAAAA,MAAA,OAAKC,UAAWH,EAAWI,SAAA,CACtB6B,GAED5B,EAAAA,EAAAA,KAACU,EAAmB,CAACG,SAZZmB,IACjBvC,EAAMwC,YAAYD,EAAME,eAAe,SAajC,E,wBCTd,SAAeC,E,MAAAA,KACXC,EAAAA,EAAAA,KAlBmBf,IACZ,CACHC,YAAaD,EAAMC,gBAGDe,IACf,CACHJ,YAAcK,IACVD,GAASE,EAAAA,EAAAA,GAA2BD,GAAgB,MAW5DE,EAAAA,EAFJ,CAGEC,E,6ECzBF,IAAIC,EAA8BrB,IACvB,CACHsB,OAAQtB,EAAMuB,KAAKD,SAIpB,MAAMH,EAAoBK,IAC7B,MAAMC,UAA0BC,EAAAA,UAE5BC,MAAAA,GACI,OAAIC,KAAKxD,MAAMkD,QAGR3C,EAAAA,EAAAA,KAAC6C,EAAS,IAAKI,KAAKxD,SAFhBO,EAAAA,EAAAA,KAACkD,EAAAA,GAAQ,CAAC/C,GAAG,UAG5B,EAIJ,OADiCiC,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU,EACpC,C","sources":["webpack://project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__24kJ+\",\"dialogsItems\":\"Dialogs_dialogsItems__WfF0B\",\"dialog\":\"Dialogs_dialog__FI4Gf\",\"active\":\"Dialogs_active__anq7M\",\"avatar\":\"Dialogs_avatar__8NOKr\",\"messages\":\"Dialogs_messages__-gs2c\",\"newMessage\":\"Dialogs_newMessage__sXVfy\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageRow\":\"Message_messageRow__bQZB6\",\"answer\":\"Message_answer__SwPd2\",\"message\":\"Message_message__KQ5Mr\",\"avatar\":\"Message_avatar__GBV+t\"};","import s from \"./Message.module.css\";\nimport React from 'react';\n\nconst Message = (props) => {\n    let messClass = s.messageRow + ' ' + ((props.answer) ? s.answer : '');\n\n    return (\n        <div className={messClass}>\n            <div className={s.avatar}></div>\n            <div className={s.message}>\n                {props.message}\n            </div>\n        </div>\n    );\n};\n\nexport default Message;","import s from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from 'react';\n\nconst DialogItem = (props) =>{\n    return (\n        <div className={s.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id}>\n                <div className={s.avatar}>\n                    <img src={props.avatar}/>\n                </div>\n                {props.name}\n            </NavLink>\n        </div>\n    );\n};\n\nexport default DialogItem;","import React  from 'react';\nimport s from './Dialogs.module.css'\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { Navigate } from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {Textarea} from \"../common/FormControls/FormControls\";\n\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => {\n        return <DialogItem id={d.id} name={d.name} avatar={d.avatar} />\n    });\n\n    let messagesElements = state.messages.map(m => {\n        return <Message message={m.message}  answer={m.answer} />\n    });\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    };\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    );\n};\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form className={s.newMessage} onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                   name={\"newMessageBody\"}\n                   placeholder={\"Add new message\"}\n                   validate={[required, maxLength50]}\n            />\n\n            <button>AddMessage</button>\n        </form>\n    );\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import React from 'react';\nimport {addNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageText) => {\n            dispatch(addNewMessageActionCreator(newMessageText));\n        },\n    }\n};\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\n// export default DialogsContainer;\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n\r\n        render(){\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}"],"names":["props","messClass","s","answer","_jsxs","className","children","_jsx","message","NavLink","to","id","src","avatar","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","value","sendMessage","newMessageBody","compose","connect","dispatch","newMessageText","addNewMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}