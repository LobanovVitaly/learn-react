{"version":3,"file":"static/js/75.6b3da97f.chunk.js","mappings":"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","sources":["webpack://project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","webpack://project/./src/components/ProfileInfo/ProfileInfo.module.css?bc14","components/ProfileInfo/ProfileStatusWithHooks.jsx","components/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__9HAQk\",\"newPostForm\":\"MyPosts_newPostForm__DEing\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__eaGRp\"};","import s from './Post.module.css';\nimport React from 'react';\n\nconst Post = (props) =>{\n\treturn (\n\t\t <div className={s.item}>\n\t\t \t<img src=\"https://faunistics.com/wp-content/uploads/2021/01/4.jpg\" alt=\"\" />\n          \t{props.message}\n          \t<div>Like: {props.likesCount}</div>\n        </div>\n\t);\n}\n\nexport default Post;","import React  from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormControls/FormControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo( props => {\n    console.log('render')\n    let postElements = props.posts.map(p => {\n        return <Post key={p.id} message={p.message} likesCount={p.likesCount}/>;\n    });\n\n    const submit = (value) => {\n        props.addPostActionCreator(value.newPostText)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h2>Posts</h2>\n\n            <NewPostFormRedux onSubmit={submit}/>\n\n            {\n                postElements\n            }\n        </div>\n    );\n});\n\n\nconst NewPostForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit} className={s.newPostForm}>\n            <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\n            <button type={\"submit\"}>Add post</button>\n        </form>\n    );\n}\n\nconst NewPostFormRedux = reduxForm({\n    form: 'newPost'\n})(NewPostForm);\n\nexport default MyPosts;\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contentTopImg\":\"ProfileInfo_contentTopImg__A2L-I\",\"userPhoto\":\"ProfileInfo_userPhoto__dG8IE\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__4BgVd\",\"socialLinks\":\"ProfileInfo_socialLinks__jjh7J\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWitHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onChange={onStatusChange}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                           />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWitHooks;","import React  from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport photo from \"../../assets/img/user-avatar.png\";\nimport ProfileStatus from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if(!profile){\n        return <Preloader />\n    }\n    return (\n        <div>\n            {/*\n            <div className={s.contentTopImg}>\n                <img\n                    src=\"https://p0.piqsels.com/preview/555/605/138/clouds-daylight-hd-wallpaper-landscape-thumbnail.jpg\"\n                    alt=\"\"/>\n            </div>\n            */}\n\n            <div className={s.descriptionBlock}>\n                <img className={s.userPhoto} src={profile.photos.small == null ?  photo : profile.photos.small } alt=\"\"/>\n\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\n\n                <p>{profile.aboutMe}</p>\n            </div>\n\n            <div className={s.socialLinks}>\n                {(profile.contacts.facebook) &&\n                    <a href={profile.contacts.facebook}>Facebook</a>\n                }\n                {(profile.contacts.website) &&\n                    <a href={profile.contacts.website}>website</a>\n                }\n                {(profile.contacts.vk) &&\n                    <a href={profile.contacts.vk}>vk</a>\n                }\n                {(profile.contacts.twitter) &&\n                    <a href={profile.contacts.twitter}>twitter</a>\n                }\n                {(profile.contacts.instagram) &&\n                    <a href={profile.contacts.instagram}>instagram</a>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;","import React  from 'react';\nimport s from './MyPosts.module.css';\nimport {addPostActionCreator, onPostChangeActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         updateNewPostText: (text) => {\n//             dispatch(onPostChangeActionCreator(text));\n//         },\n//         addPost: () => {\n//             dispatch(addPostActionCreator());\n//         }\n//     }\n// };\n\nconst MyPostsContainer = connect(mapStateToProps, {addPostActionCreator})(MyPosts)\n\nexport default MyPostsContainer;\n\n\n\n\n\n\n","import React  from 'react';\nimport s from './Profile.module.css';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from \"../ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport default Profile;","import React  from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from \"../../hoc/withRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props)\r\n        let userId = this.props.router.params.userId;\r\n\r\n        if(!userId){\r\n            //userId = 29774;\r\n            userId = this.props.authorizedUserId\r\n\r\n            if(!userId) {\r\n                //debugger\r\n                //this.props.router.navigate('/login')\r\n                //const { history } = this.props;\r\n                //this.props.history.push(\"/login\")\r\n                this.props.router.location.path = '/login';\r\n\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n        // profileAPI.getProfile(userId)\r\n        //     .then(response => {\r\n        //         this.props.setUserProfile(response.data);\r\n        //     })\r\n\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//export default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent));\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n\r\n        render(){\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","console","log","postElements","posts","map","p","Post","id","NewPostFormRedux","onSubmit","value","addPostActionCreator","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","type","editMode","setEditMode","useState","status","setStatus","useEffect","_Fragment","onDoubleClick","activateEditMode","autoFocus","onChange","e","currentTarget","updateStatus","onBlur","deactivateEditMode","_ref","profile","photos","small","photo","ProfileStatus","aboutMe","contacts","facebook","href","website","vk","twitter","instagram","Preloader","connect","state","profilePage","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","authorizedUserId","location","path","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","withRouter","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}